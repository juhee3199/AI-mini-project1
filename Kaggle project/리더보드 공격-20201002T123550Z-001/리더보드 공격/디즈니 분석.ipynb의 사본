{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"디즈니 분석.ipynb의 사본","provenance":[{"file_id":"1-sqfKSANOhKrUVquqgBqrA7VOXW41kEu","timestamp":1592470450915}],"collapsed_sections":[],"authorship_tag":"ABX9TyPXEENLhnv3j0mie/ILf/Ux"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"foTduHPN3NCG","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":577},"executionInfo":{"status":"ok","timestamp":1593269482675,"user_tz":-540,"elapsed":18330,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"9bfa63b9-f101-4338-887d-89b83ea09738"},"source":["!pip uninstall -y kaggle\n","!pip install --upgrade pip\n","!pip install kaggle==1.5.6"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Uninstalling kaggle-1.5.6:\n","  Successfully uninstalled kaggle-1.5.6\n","Collecting pip\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/43/84/23ed6a1796480a6f1a2d38f2802901d078266bda38388954d01d3f2e821d/pip-20.1.1-py2.py3-none-any.whl (1.5MB)\n","\u001b[K     |████████████████████████████████| 1.5MB 2.8MB/s \n","\u001b[?25hInstalling collected packages: pip\n","  Found existing installation: pip 19.3.1\n","    Uninstalling pip-19.3.1:\n","      Successfully uninstalled pip-19.3.1\n","Successfully installed pip-20.1.1\n","Collecting kaggle==1.5.6\n","  Downloading kaggle-1.5.6.tar.gz (58 kB)\n","\u001b[K     |████████████████████████████████| 58 kB 1.7 MB/s \n","\u001b[?25hRequirement already satisfied: urllib3<1.25,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from kaggle==1.5.6) (1.24.3)\n","Requirement already satisfied: six>=1.10 in /usr/local/lib/python3.6/dist-packages (from kaggle==1.5.6) (1.12.0)\n","Requirement already satisfied: certifi in /usr/local/lib/python3.6/dist-packages (from kaggle==1.5.6) (2020.6.20)\n","Requirement already satisfied: python-dateutil in /usr/local/lib/python3.6/dist-packages (from kaggle==1.5.6) (2.8.1)\n","Requirement already satisfied: requests in /usr/local/lib/python3.6/dist-packages (from kaggle==1.5.6) (2.23.0)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.6/dist-packages (from kaggle==1.5.6) (4.41.1)\n","Requirement already satisfied: python-slugify in /usr/local/lib/python3.6/dist-packages (from kaggle==1.5.6) (4.0.0)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests->kaggle==1.5.6) (2.9)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests->kaggle==1.5.6) (3.0.4)\n","Requirement already satisfied: text-unidecode>=1.3 in /usr/local/lib/python3.6/dist-packages (from python-slugify->kaggle==1.5.6) (1.3)\n","Building wheels for collected packages: kaggle\n","  Building wheel for kaggle (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for kaggle: filename=kaggle-1.5.6-py3-none-any.whl size=72859 sha256=6775cfe3f8051441df544347c3827705c16af2bf5bfd2035f3f35a5109c2b93f\n","  Stored in directory: /root/.cache/pip/wheels/01/3e/ff/77407ebac3ef71a79b9166a8382aecf88415a0bcbe3c095a01\n","Successfully built kaggle\n","Installing collected packages: kaggle\n","Successfully installed kaggle-1.5.6\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"pNMq_8v13aIr","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1593269917369,"user_tz":-540,"elapsed":6611,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"135e7645-0438-4fdd-e926-823451c7e59f"},"source":["!mkdir -p ~/.kaggle\n","!cp kaggle.json ~/.kaggle/\n","! chmod 600 ~/.kaggle/kaggle.json\n","!kaggle -v"],"execution_count":3,"outputs":[{"output_type":"stream","text":["Kaggle API 1.5.6\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"8uD9cqAN3qVO","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1593269921111,"user_tz":-540,"elapsed":8048,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"1645beb3-6f6a-4e02-ab90-d312ccee02d2"},"source":["!kaggle competitions download -c disneyland-crowd-levels \n","!unzip disneyland-crowd-levels.zip"],"execution_count":4,"outputs":[{"output_type":"stream","text":["Downloading disneyland-crowd-levels.zip to /content\n","\r  0% 0.00/4.15k [00:00<?, ?B/s]\n","\r100% 4.15k/4.15k [00:00<00:00, 3.62MB/s]\n","Archive:  disneyland-crowd-levels.zip\n","  inflating: submission_sample.csv   \n","  inflating: test.csv                \n","  inflating: train.csv               \n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"fK_k8F5LAnK9","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593269923836,"user_tz":-540,"elapsed":9891,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["import torch\n","import torchvision.datasets as data\n","import torchvision.transforms as transforms\n","import random\n"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"id":"fkadVVLt3_45","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":419},"executionInfo":{"status":"ok","timestamp":1593269923839,"user_tz":-540,"elapsed":8968,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"c6e5aecb-1bba-42e5-e25c-69a520f8bb9f"},"source":["import numpy as np\n","import torch\n","import torch.optim as optim\n","import torch.nn as nn\n","import torch.nn.functional as F\n","import pandas as pd\n","from sklearn.preprocessing import MinMaxScaler\n","\n","xy=pd.read_csv('train.csv')\n","xy"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Temperature</th>\n","      <th>Weather</th>\n","      <th>Break</th>\n","      <th>Festival</th>\n","      <th>Weekend</th>\n","      <th>Holiday</th>\n","      <th>Crowd level</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2018-01-01</td>\n","      <td>13</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2018-01-02</td>\n","      <td>15</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2018-01-03</td>\n","      <td>16</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2018-01-04</td>\n","      <td>17</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2018-01-05</td>\n","      <td>17</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>756</th>\n","      <td>2020-01-27</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>757</th>\n","      <td>2020-01-28</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>758</th>\n","      <td>2020-01-29</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>759</th>\n","      <td>2020-01-30</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>760</th>\n","      <td>2020-01-31</td>\n","      <td>13</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>761 rows × 8 columns</p>\n","</div>"],"text/plain":["           Date  Temperature  Weather  ...  Weekend  Holiday  Crowd level\n","0    2018-01-01           13        1  ...        0        1            2\n","1    2018-01-02           15        1  ...        0        0            3\n","2    2018-01-03           16        1  ...        0        0            3\n","3    2018-01-04           17        0  ...        0        0            3\n","4    2018-01-05           17        1  ...        0        0            3\n","..          ...          ...      ...  ...      ...      ...          ...\n","756  2020-01-27            8        1  ...        0        0            2\n","757  2020-01-28           10        1  ...        0        0            2\n","758  2020-01-29            8        0  ...        0        0            1\n","759  2020-01-30           11        0  ...        0        0            1\n","760  2020-01-31           13        0  ...        0        0            2\n","\n","[761 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"IX745_H_sQIs","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1593269931394,"user_tz":-540,"elapsed":644,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"9602b46c-40f6-4d02-d272-2f844d21f940"},"source":["scaler = MinMaxScaler()\n","x_data = xy.iloc[:,1:6]\n","y_data = xy.iloc[:, 7:]\n","x_data=np.array(x_data, dtype=int)\n","y_data=np.array(y_data, dtype=int)\n","\n","mintemp=x_data[:,0].min()\n","x_data[:,0]=x_data[:,0]-mintemp\n","\n","scaler.fit(x_data)\n","x_data=scaler.transform(x_data)\n","\n","x_train = torch.FloatTensor(x_data)\n","y_train = torch.LongTensor(y_data)\n","\n","x_train"],"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[0.1429, 0.3333, 1.0000, 0.0000, 0.0000],\n","        [0.1688, 0.3333, 1.0000, 0.0000, 0.0000],\n","        [0.1818, 0.3333, 1.0000, 0.0000, 0.0000],\n","        ...,\n","        [0.0779, 0.0000, 1.0000, 0.0000, 0.0000],\n","        [0.1169, 0.0000, 1.0000, 0.0000, 0.0000],\n","        [0.1429, 0.0000, 1.0000, 0.0000, 0.0000]])"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"lVjk67YosQF8","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593269932505,"user_tz":-540,"elapsed":556,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["nb_class = 4\n","nb_data = len(y_train)\n","\n","linear1 = torch.nn.Linear(5,100,bias=True)\n","linear2 = torch.nn.Linear(100,4,bias=True)\n","\n","relu = torch.nn.ReLU()\n","\n","torch.nn.init.xavier_uniform_(linear1.weight)\n","torch.nn.init.xavier_uniform_(linear2.weight)\n","\n","dropout = torch.nn.Dropout(p=0.5)\n","\n","model = torch.nn.Sequential(linear1,relu,dropout,\n","                            linear2)"],"execution_count":8,"outputs":[]},{"cell_type":"code","metadata":{"id":"ybEpX5ymsQBk","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593269933260,"user_tz":-540,"elapsed":480,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["y_train=y_train.reshape([761])\n","y_train=y_train-1"],"execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"id":"dE5GgDzNgn8W","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":593},"executionInfo":{"status":"ok","timestamp":1593269937200,"user_tz":-540,"elapsed":530,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"14e790b5-37dc-42ee-8a72-8b99f3ce8083"},"source":["y_train"],"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([1, 2, 2, 2, 2, 2, 3, 1, 0, 0, 1, 1, 2, 2, 2, 0, 0, 0, 1, 1, 1, 0, 0, 0,\n","        0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 2, 1, 0, 0, 0, 1, 2, 2, 2, 0, 0, 0, 1, 2,\n","        2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 1, 2, 2, 1, 1, 1, 1, 2, 0, 2, 2, 2,\n","        2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 3, 3, 3, 3, 2, 2, 1, 2, 2, 2, 2, 2,\n","        2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2, 2, 3, 1, 1, 1, 1, 2, 2, 2, 1,\n","        1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2,\n","        1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1,\n","        2, 2, 2, 1, 1, 3, 2, 2, 2, 2, 2, 1, 1, 0, 2, 1, 1, 1, 0, 0, 0, 1, 1, 1,\n","        1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1,\n","        1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 1, 1,\n","        1, 1, 1, 1, 1, 2, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1,\n","        1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 2, 2, 2, 2, 3, 2, 2,\n","        1, 1, 2, 2, 3, 2, 1, 1, 1, 1, 2, 3, 2, 1, 1, 0, 0, 1, 1, 2, 1, 0, 0, 1,\n","        2, 2, 3, 2, 1, 1, 1, 2, 2, 2, 3, 3, 1, 2, 3, 3, 2, 1, 1, 1, 0, 2, 2, 2,\n","        1, 1, 0, 0, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 3,\n","        3, 3, 3, 3, 2, 2, 3, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 2,\n","        2, 2, 1, 0, 0, 1, 1, 2, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 2, 1, 2, 0,\n","        0, 0, 1, 3, 2, 3, 2, 2, 2, 2, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1,\n","        2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 3, 3, 2, 2, 1, 1, 1, 3,\n","        2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2,\n","        2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 3, 2,\n","        2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1,\n","        1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2,\n","        1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 2,\n","        1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 0, 0, 1,\n","        1, 2, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n","        0, 0, 0, 1, 2, 1, 1, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2,\n","        2, 3, 2, 3, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 2, 3, 2, 1, 0, 0, 0, 1, 2, 1,\n","        1, 0, 0, 1, 1, 3, 3, 2, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 1, 2, 2, 3, 3, 1,\n","        0, 3, 3, 2, 1, 0, 0, 1, 1, 1, 1, 2, 1, 1, 1, 2, 3, 2, 2, 1, 1, 2, 2, 3,\n","        2, 1, 3, 2, 2, 3, 3, 3, 3, 3, 2, 3, 2, 3, 2, 2, 1, 1, 1, 1, 2, 1, 1, 0,\n","        0, 0, 1, 2, 2, 2, 1, 0, 0, 1, 2, 1, 1, 1, 0, 0, 1])"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"markdown","metadata":{"id":"uEcSNsbtiMxO","colab_type":"text"},"source":["loss = torch.nn.CrossEntropyLoss()\n","op=optim.Adam(model.parameters(),lr=1e-3)\n","epochs=5000\n","minloss=1000\n","model=model.cuda()\n","loss=loss.cuda()\n","for epoch in range(epochs) : \n","    rand= np.random.choice(np.array([i for i in range(761)]),761) \n","    avg=[]\n","    op.zero_grad()\n","    output =model(x_train.cuda())\n","    cost=loss(output,y_train.cuda())\n","    cost.backward()\n","    op.step()\n","    avg.append(cost.item())\n","    if np.array(avg).mean()<minloss:\n","      minloss=np.array(avg).mean()\n","      goodmodel=model\n","    if(epoch%100==0):\n","        print('Epoch {:4d}/{} Cost: {:.6f}'.format(epoch, epochs, minloss))"]},{"cell_type":"code","metadata":{"id":"wJcaJ_CTiL6k","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"mwwUeWfliF4F","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":352},"executionInfo":{"status":"error","timestamp":1593269943327,"user_tz":-540,"elapsed":538,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"96d1ad02-9013-4bf3-da48-df1942f0d855"},"source":["testxy = pd.read_csv('test.csv', header=None)\n","tx_data = testxy.loc[1:,1:6]\n","tx_data=np.array(tx_data, dtype=int)\n","tx_data[:,0]=tx_data[:,0]-mintemp\n","tx_data=scaler.transform(tx_data)\n","x_test = torch.FloatTensor(tx_data)"],"execution_count":11,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-11-272cf08ab0da>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mtx_data\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtx_data\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mtx_data\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtx_data\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0mmintemp\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0mtx_data\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mscaler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtransform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtx_data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0mx_test\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mFloatTensor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtx_data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/sklearn/preprocessing/_data.py\u001b[0m in \u001b[0;36mtransform\u001b[0;34m(self, X)\u001b[0m\n\u001b[1;32m    412\u001b[0m                         force_all_finite=\"allow-nan\")\n\u001b[1;32m    413\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 414\u001b[0;31m         \u001b[0mX\u001b[0m \u001b[0;34m*=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mscale_\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    415\u001b[0m         \u001b[0mX\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmin_\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    416\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: operands could not be broadcast together with shapes (29,6) (5,) (29,6) "]}]},{"cell_type":"code","metadata":{"id":"BwZPOEa7PpGa","colab_type":"code","colab":{}},"source":["with torch.no_grad():\n","  output=goodmodel(x_test.to(device))\n","  prediction = torch.argmax(output, dim=1)\n","  prediction=prediction+1"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"G4b2TjTJPzYv","colab_type":"code","colab":{}},"source":["submission=pd.read_csv(submission_sample.csv)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qNpfXSVsPyT8","colab_type":"code","colab":{}},"source":["for i in range(len(prediction)):\n","    submission['Crowd level'][i] = prediction[i].item()\n","submission['Crowd level']=submission['Crowd level'].astype(\"int\")\n","submission.to_csv(\"out.csv\",index=False,header=True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"YSFU-Fe_PyJZ","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"6x3lhTbDsOND","colab_type":"text"},"source":["## 내가 한거"]},{"cell_type":"code","metadata":{"id":"lZltKugotn_9","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":419},"executionInfo":{"status":"ok","timestamp":1593270153966,"user_tz":-540,"elapsed":1240,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"25365692-2eec-40db-c42d-6f139251ee4c"},"source":["import pandas as pd\n","import numpy as np\n","\n","import torch\n","import torchvision.datasets as data\n","import torchvision.transforms as transforms\n","import random\n","\n","import torch.optim as optim\n","import torch.nn as nn\n","import torch.nn.functional as F\n","\n","from sklearn import preprocessing\n","from sklearn.preprocessing import MinMaxScaler\n","\n","xy=pd.read_csv('train.csv')\n","xy"],"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Temperature</th>\n","      <th>Weather</th>\n","      <th>Break</th>\n","      <th>Festival</th>\n","      <th>Weekend</th>\n","      <th>Holiday</th>\n","      <th>Crowd level</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2018-01-01</td>\n","      <td>13</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2018-01-02</td>\n","      <td>15</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2018-01-03</td>\n","      <td>16</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2018-01-04</td>\n","      <td>17</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2018-01-05</td>\n","      <td>17</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>756</th>\n","      <td>2020-01-27</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>757</th>\n","      <td>2020-01-28</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>758</th>\n","      <td>2020-01-29</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>759</th>\n","      <td>2020-01-30</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>760</th>\n","      <td>2020-01-31</td>\n","      <td>13</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>761 rows × 8 columns</p>\n","</div>"],"text/plain":["           Date  Temperature  Weather  ...  Weekend  Holiday  Crowd level\n","0    2018-01-01           13        1  ...        0        1            2\n","1    2018-01-02           15        1  ...        0        0            3\n","2    2018-01-03           16        1  ...        0        0            3\n","3    2018-01-04           17        0  ...        0        0            3\n","4    2018-01-05           17        1  ...        0        0            3\n","..          ...          ...      ...  ...      ...      ...          ...\n","756  2020-01-27            8        1  ...        0        0            2\n","757  2020-01-28           10        1  ...        0        0            2\n","758  2020-01-29            8        0  ...        0        0            1\n","759  2020-01-30           11        0  ...        0        0            1\n","760  2020-01-31           13        0  ...        0        0            2\n","\n","[761 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":22}]},{"cell_type":"code","metadata":{"id":"GILTd0aftw0i","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":266},"executionInfo":{"status":"ok","timestamp":1593270154851,"user_tz":-540,"elapsed":1636,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"a80e99f4-e06d-4cb0-c1c6-7ed145c3afbd"},"source":["corr=xy.corr(method='pearson')\n","corr"],"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Temperature</th>\n","      <th>Weather</th>\n","      <th>Break</th>\n","      <th>Festival</th>\n","      <th>Weekend</th>\n","      <th>Holiday</th>\n","      <th>Crowd level</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Temperature</th>\n","      <td>1.000000</td>\n","      <td>-0.168352</td>\n","      <td>0.186557</td>\n","      <td>-0.277553</td>\n","      <td>-0.014185</td>\n","      <td>-0.116953</td>\n","      <td>-0.067345</td>\n","    </tr>\n","    <tr>\n","      <th>Weather</th>\n","      <td>-0.168352</td>\n","      <td>1.000000</td>\n","      <td>-0.085055</td>\n","      <td>-0.004612</td>\n","      <td>0.012214</td>\n","      <td>0.044230</td>\n","      <td>-0.083908</td>\n","    </tr>\n","    <tr>\n","      <th>Break</th>\n","      <td>0.186557</td>\n","      <td>-0.085055</td>\n","      <td>1.000000</td>\n","      <td>-0.072267</td>\n","      <td>-0.023079</td>\n","      <td>-0.011493</td>\n","      <td>0.062068</td>\n","    </tr>\n","    <tr>\n","      <th>Festival</th>\n","      <td>-0.277553</td>\n","      <td>-0.004612</td>\n","      <td>-0.072267</td>\n","      <td>1.000000</td>\n","      <td>0.017842</td>\n","      <td>0.117234</td>\n","      <td>0.248035</td>\n","    </tr>\n","    <tr>\n","      <th>Weekend</th>\n","      <td>-0.014185</td>\n","      <td>0.012214</td>\n","      <td>-0.023079</td>\n","      <td>0.017842</td>\n","      <td>1.000000</td>\n","      <td>-0.023896</td>\n","      <td>0.259992</td>\n","    </tr>\n","    <tr>\n","      <th>Holiday</th>\n","      <td>-0.116953</td>\n","      <td>0.044230</td>\n","      <td>-0.011493</td>\n","      <td>0.117234</td>\n","      <td>-0.023896</td>\n","      <td>1.000000</td>\n","      <td>0.087389</td>\n","    </tr>\n","    <tr>\n","      <th>Crowd level</th>\n","      <td>-0.067345</td>\n","      <td>-0.083908</td>\n","      <td>0.062068</td>\n","      <td>0.248035</td>\n","      <td>0.259992</td>\n","      <td>0.087389</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["             Temperature   Weather     Break  ...   Weekend   Holiday  Crowd level\n","Temperature     1.000000 -0.168352  0.186557  ... -0.014185 -0.116953    -0.067345\n","Weather        -0.168352  1.000000 -0.085055  ...  0.012214  0.044230    -0.083908\n","Break           0.186557 -0.085055  1.000000  ... -0.023079 -0.011493     0.062068\n","Festival       -0.277553 -0.004612 -0.072267  ...  0.017842  0.117234     0.248035\n","Weekend        -0.014185  0.012214 -0.023079  ...  1.000000 -0.023896     0.259992\n","Holiday        -0.116953  0.044230 -0.011493  ... -0.023896  1.000000     0.087389\n","Crowd level    -0.067345 -0.083908  0.062068  ...  0.259992  0.087389     1.000000\n","\n","[7 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":23}]},{"cell_type":"code","metadata":{"id":"NTcBV5SFqsel","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":233},"executionInfo":{"status":"ok","timestamp":1593270156021,"user_tz":-540,"elapsed":1001,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"ed23e34b-9eab-427e-984c-3125d49f01bb"},"source":["tmp=xy['Date'].str.slice(5,7)\n","tmp"],"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      01\n","1      01\n","2      01\n","3      01\n","4      01\n","       ..\n","756    01\n","757    01\n","758    01\n","759    01\n","760    01\n","Name: Date, Length: 761, dtype: object"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"code","metadata":{"id":"Vi_WhIzZrOij","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":419},"executionInfo":{"status":"ok","timestamp":1593270156320,"user_tz":-540,"elapsed":379,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"03d65283-9a51-4444-c67b-930d40c479bb"},"source":["xy['Date']=tmp\n","xy['Date']\n","xy"],"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Temperature</th>\n","      <th>Weather</th>\n","      <th>Break</th>\n","      <th>Festival</th>\n","      <th>Weekend</th>\n","      <th>Holiday</th>\n","      <th>Crowd level</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>01</td>\n","      <td>13</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>01</td>\n","      <td>15</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>01</td>\n","      <td>16</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>01</td>\n","      <td>17</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>01</td>\n","      <td>17</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>756</th>\n","      <td>01</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>757</th>\n","      <td>01</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>758</th>\n","      <td>01</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>759</th>\n","      <td>01</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>760</th>\n","      <td>01</td>\n","      <td>13</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>761 rows × 8 columns</p>\n","</div>"],"text/plain":["    Date  Temperature  Weather  Break  Festival  Weekend  Holiday  Crowd level\n","0     01           13        1      1         0        0        1            2\n","1     01           15        1      1         0        0        0            3\n","2     01           16        1      1         0        0        0            3\n","3     01           17        0      1         0        0        0            3\n","4     01           17        1      1         0        0        0            3\n","..   ...          ...      ...    ...       ...      ...      ...          ...\n","756   01            8        1      1         0        0        0            2\n","757   01           10        1      1         0        0        0            2\n","758   01            8        0      1         0        0        0            1\n","759   01           11        0      1         0        0        0            1\n","760   01           13        0      1         0        0        0            2\n","\n","[761 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":25}]},{"cell_type":"code","metadata":{"id":"cEZ0u1Kt37zg","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":419},"executionInfo":{"status":"ok","timestamp":1593270158176,"user_tz":-540,"elapsed":745,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"5ac97002-b12f-46db-bbd7-cce8d49eb8ba"},"source":["\n","x_data=xy.iloc[:,0:7]    #0~7 col\n","y_data=xy.iloc[:,7]\n","\n","x_data"],"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Temperature</th>\n","      <th>Weather</th>\n","      <th>Break</th>\n","      <th>Festival</th>\n","      <th>Weekend</th>\n","      <th>Holiday</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>01</td>\n","      <td>13</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>01</td>\n","      <td>15</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>01</td>\n","      <td>16</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>01</td>\n","      <td>17</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>01</td>\n","      <td>17</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>756</th>\n","      <td>01</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>757</th>\n","      <td>01</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>758</th>\n","      <td>01</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>759</th>\n","      <td>01</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>760</th>\n","      <td>01</td>\n","      <td>13</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>761 rows × 7 columns</p>\n","</div>"],"text/plain":["    Date  Temperature  Weather  Break  Festival  Weekend  Holiday\n","0     01           13        1      1         0        0        1\n","1     01           15        1      1         0        0        0\n","2     01           16        1      1         0        0        0\n","3     01           17        0      1         0        0        0\n","4     01           17        1      1         0        0        0\n","..   ...          ...      ...    ...       ...      ...      ...\n","756   01            8        1      1         0        0        0\n","757   01           10        1      1         0        0        0\n","758   01            8        0      1         0        0        0\n","759   01           11        0      1         0        0        0\n","760   01           13        0      1         0        0        0\n","\n","[761 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":26}]},{"cell_type":"code","metadata":{"id":"0G_fNpEa44VT","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":233},"executionInfo":{"status":"ok","timestamp":1593270160017,"user_tz":-540,"elapsed":577,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"ce372e0f-c0ff-45f2-8d37-d1fcf1ffb8b4"},"source":["y_data"],"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      2\n","1      3\n","2      3\n","3      3\n","4      3\n","      ..\n","756    2\n","757    2\n","758    1\n","759    1\n","760    2\n","Name: Crowd level, Length: 761, dtype: int64"]},"metadata":{"tags":[]},"execution_count":27}]},{"cell_type":"code","metadata":{"id":"K-T3c0uiqnM9","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1593270161517,"user_tz":-540,"elapsed":651,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"6193eec3-e70f-4c1f-ad95-a505f94f07a1"},"source":["y_data.shape"],"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(761,)"]},"metadata":{"tags":[]},"execution_count":28}]},{"cell_type":"code","metadata":{"id":"md8guPCx5I3q","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":107},"executionInfo":{"status":"ok","timestamp":1593270163173,"user_tz":-540,"elapsed":1041,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"ae406a3f-febf-4d67-e86a-67d05b4b8920"},"source":["x_data = x_data.astype('float32')\n","y_data = y_data.astype('float32')\n","\n","x_train=np.array(x_data)\n","y_train=np.array(y_data)\n","\n","x_train=torch.FloatTensor(x_train)\n","y_train=torch.LongTensor(y_train)\n","\n","x_train[:5]"],"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[ 1., 13.,  1.,  1.,  0.,  0.,  1.],\n","        [ 1., 15.,  1.,  1.,  0.,  0.,  0.],\n","        [ 1., 16.,  1.,  1.,  0.,  0.,  0.],\n","        [ 1., 17.,  0.,  1.,  0.,  0.,  0.],\n","        [ 1., 17.,  1.,  1.,  0.,  0.,  0.]])"]},"metadata":{"tags":[]},"execution_count":29}]},{"cell_type":"code","metadata":{"id":"f5hUqYmC6U1F","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1593270165502,"user_tz":-540,"elapsed":2127,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"4a284030-3181-4c7a-d5a0-03a5ad523e92"},"source":["x_train.shape"],"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["torch.Size([761, 7])"]},"metadata":{"tags":[]},"execution_count":30}]},{"cell_type":"code","metadata":{"id":"rHjQttKM7hFz","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1593270165504,"user_tz":-540,"elapsed":1207,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"8357d965-cbb4-4cdf-f24b-63867a2306cf"},"source":["y_train.shape"],"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["torch.Size([761])"]},"metadata":{"tags":[]},"execution_count":31}]},{"cell_type":"code","metadata":{"id":"bnj6XTGi72uh","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":593},"executionInfo":{"status":"ok","timestamp":1593270166366,"user_tz":-540,"elapsed":1162,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"aff3ed3f-71c0-4feb-c4e9-be1e76fced86"},"source":["y_train"],"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([2, 3, 3, 3, 3, 3, 4, 2, 1, 1, 2, 2, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 1,\n","        1, 2, 2, 2, 2, 1, 1, 1, 2, 2, 3, 2, 1, 1, 1, 2, 3, 3, 3, 1, 1, 1, 2, 3,\n","        3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 3, 3, 2, 2, 2, 2, 3, 1, 3, 3, 3,\n","        3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 4, 4, 4, 4, 3, 3, 2, 3, 3, 3, 3, 3,\n","        3, 3, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 3, 3, 4, 2, 2, 2, 2, 3, 3, 3, 2,\n","        2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 3, 3, 3, 2, 3, 3, 3,\n","        2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2,\n","        3, 3, 3, 2, 2, 4, 3, 3, 3, 3, 3, 2, 2, 1, 3, 2, 2, 2, 1, 1, 1, 2, 2, 2,\n","        2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 3, 3, 2, 3, 3, 3, 3, 3, 2,\n","        2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 3, 3, 3, 2, 2, 3, 2, 2,\n","        2, 2, 2, 2, 2, 3, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 2,\n","        2, 3, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 4, 4, 4, 3, 3, 3, 3, 4, 3, 3,\n","        2, 2, 3, 3, 4, 3, 2, 2, 2, 2, 3, 4, 3, 2, 2, 1, 1, 2, 2, 3, 2, 1, 1, 2,\n","        3, 3, 4, 3, 2, 2, 2, 3, 3, 3, 4, 4, 2, 3, 4, 4, 3, 2, 2, 2, 1, 3, 3, 3,\n","        2, 2, 1, 1, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 2, 2, 2, 3, 3, 3, 3, 3, 4,\n","        4, 4, 4, 4, 3, 3, 4, 3, 2, 2, 3, 2, 2, 3, 2, 2, 2, 2, 1, 1, 1, 1, 2, 3,\n","        3, 3, 2, 1, 1, 2, 2, 3, 2, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 3, 2, 3, 1,\n","        1, 1, 2, 4, 3, 4, 3, 3, 3, 3, 3, 3, 2, 2, 1, 2, 2, 1, 2, 2, 1, 1, 1, 2,\n","        3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 2, 3, 3, 4, 4, 3, 3, 2, 2, 2, 4,\n","        3, 3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3,\n","        3, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 4, 3,\n","        3, 3, 2, 3, 2, 2, 2, 2, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2,\n","        2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3,\n","        2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 3, 2, 2, 3, 2, 3, 2, 2, 2, 2, 3, 2, 3, 3,\n","        2, 2, 2, 3, 2, 3, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 3, 2, 2, 2, 1, 1, 2,\n","        2, 3, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2,\n","        1, 1, 1, 2, 3, 2, 2, 1, 1, 2, 2, 3, 3, 3, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3,\n","        3, 4, 3, 4, 2, 2, 3, 2, 3, 3, 2, 2, 2, 2, 3, 4, 3, 2, 1, 1, 1, 2, 3, 2,\n","        2, 1, 1, 2, 2, 4, 4, 3, 2, 1, 2, 2, 3, 3, 2, 2, 1, 2, 2, 3, 3, 4, 4, 2,\n","        1, 4, 4, 3, 2, 1, 1, 2, 2, 2, 2, 3, 2, 2, 2, 3, 4, 3, 3, 2, 2, 3, 3, 4,\n","        3, 2, 4, 3, 3, 4, 4, 4, 4, 4, 3, 4, 3, 4, 3, 3, 2, 2, 2, 2, 3, 2, 2, 1,\n","        1, 1, 2, 3, 3, 3, 2, 1, 1, 2, 3, 2, 2, 2, 1, 1, 2])"]},"metadata":{"tags":[]},"execution_count":32}]},{"cell_type":"code","metadata":{"id":"HzT2pNS2u-Pn","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":593},"executionInfo":{"status":"ok","timestamp":1593270168905,"user_tz":-540,"elapsed":746,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"2431afaf-a363-4c37-91df-e8b31d57b7bd"},"source":["y_train=y_train.reshape([761])\n","y_train=y_train-1\n","y_train"],"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([1, 2, 2, 2, 2, 2, 3, 1, 0, 0, 1, 1, 2, 2, 2, 0, 0, 0, 1, 1, 1, 0, 0, 0,\n","        0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 2, 1, 0, 0, 0, 1, 2, 2, 2, 0, 0, 0, 1, 2,\n","        2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 1, 2, 2, 1, 1, 1, 1, 2, 0, 2, 2, 2,\n","        2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 3, 3, 3, 3, 2, 2, 1, 2, 2, 2, 2, 2,\n","        2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2, 2, 3, 1, 1, 1, 1, 2, 2, 2, 1,\n","        1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2,\n","        1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1,\n","        2, 2, 2, 1, 1, 3, 2, 2, 2, 2, 2, 1, 1, 0, 2, 1, 1, 1, 0, 0, 0, 1, 1, 1,\n","        1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1,\n","        1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 1, 1,\n","        1, 1, 1, 1, 1, 2, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1,\n","        1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 3, 3, 3, 2, 2, 2, 2, 3, 2, 2,\n","        1, 1, 2, 2, 3, 2, 1, 1, 1, 1, 2, 3, 2, 1, 1, 0, 0, 1, 1, 2, 1, 0, 0, 1,\n","        2, 2, 3, 2, 1, 1, 1, 2, 2, 2, 3, 3, 1, 2, 3, 3, 2, 1, 1, 1, 0, 2, 2, 2,\n","        1, 1, 0, 0, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 3,\n","        3, 3, 3, 3, 2, 2, 3, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 2,\n","        2, 2, 1, 0, 0, 1, 1, 2, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 2, 1, 2, 0,\n","        0, 0, 1, 3, 2, 3, 2, 2, 2, 2, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1,\n","        2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 3, 3, 2, 2, 1, 1, 1, 3,\n","        2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2,\n","        2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 3, 2,\n","        2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1,\n","        1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2,\n","        1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 2,\n","        1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 0, 0, 1,\n","        1, 2, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n","        0, 0, 0, 1, 2, 1, 1, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2,\n","        2, 3, 2, 3, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 2, 3, 2, 1, 0, 0, 0, 1, 2, 1,\n","        1, 0, 0, 1, 1, 3, 3, 2, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 1, 2, 2, 3, 3, 1,\n","        0, 3, 3, 2, 1, 0, 0, 1, 1, 1, 1, 2, 1, 1, 1, 2, 3, 2, 2, 1, 1, 2, 2, 3,\n","        2, 1, 3, 2, 2, 3, 3, 3, 3, 3, 2, 3, 2, 3, 2, 2, 1, 1, 1, 1, 2, 1, 1, 0,\n","        0, 0, 1, 2, 2, 2, 1, 0, 0, 1, 2, 1, 1, 1, 0, 0, 1])"]},"metadata":{"tags":[]},"execution_count":33}]},{"cell_type":"markdown","metadata":{"id":"sfAK5cuzIXWj","colab_type":"text"},"source":["### 3layer \n","- xavier init\n","- Adam\n","- hidden layer node 개수: 512\n","- 학습 파라미터 설정\n","learning_rate = 0.01\n","training_epochs = 55\n","batch_size = 100\n","\n","scaler = MinMaxScaler()\n","-> Accuracy: "]},{"cell_type":"code","metadata":{"id":"euqC19KnhbHf","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593270284810,"user_tz":-540,"elapsed":1006,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["device = 'cuda' if torch.cuda.is_available() else 'cpu'\n","\n","random.seed(777)\n","torch.manual_seed(777)\n","if device == 'cuda':\n","  torch.cuda.manual_seed_all(777)"],"execution_count":58,"outputs":[]},{"cell_type":"code","metadata":{"id":"hj7_kGacAx8E","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593270284812,"user_tz":-540,"elapsed":802,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["# 학습 파라미터 설정\n","learning_rate = 0.01\n","training_epochs = 55\n","batch_size = 100\n","\n","scaler = MinMaxScaler()\n","\n","# drop_prob = 0.3"],"execution_count":59,"outputs":[]},{"cell_type":"code","metadata":{"id":"AoylCqakCAEw","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593270284815,"user_tz":-540,"elapsed":625,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["x_train=scaler.fit_transform(x_train)\n","x_train=torch.FloatTensor(x_train)\n","\n","train = torch.utils.data.TensorDataset(x_train, y_train)"],"execution_count":60,"outputs":[]},{"cell_type":"code","metadata":{"id":"szgmd56Z0Q4V","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1593270285048,"user_tz":-540,"elapsed":655,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"c97cc02a-0bae-4957-d343-32940f0fba10"},"source":["x_train.shape"],"execution_count":61,"outputs":[{"output_type":"execute_result","data":{"text/plain":["torch.Size([761, 7])"]},"metadata":{"tags":[]},"execution_count":61}]},{"cell_type":"code","metadata":{"id":"fJFjuq6VAjfr","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593270285346,"user_tz":-540,"elapsed":666,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["data_loader = torch.utils.data.DataLoader(dataset=train,\n","                                          batch_size=batch_size,\n","                                          shuffle=True,\n","                                          drop_last=True)\n","#xy=train"],"execution_count":62,"outputs":[]},{"cell_type":"code","metadata":{"id":"hBUKcIAKBGqm","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593270286109,"user_tz":-540,"elapsed":637,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["# 3-Layer\n","\n","linear1 = torch.nn.Linear(7,128,bias=True)\n","linear2 = torch.nn.Linear(128,64,bias=True)\n","linear4 = torch.nn.Linear(256,256,bias=True)\n","linear3 = torch.nn.Linear(64,4,bias=True)\n","relu = torch.nn.ReLU()"],"execution_count":63,"outputs":[]},{"cell_type":"code","metadata":{"id":"4hHP0LoeH45G","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":629},"executionInfo":{"status":"ok","timestamp":1593270286585,"user_tz":-540,"elapsed":603,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"859fb6be-e47a-43f0-ba9f-4644e49ab899"},"source":["# Random Init => Xavier Init\n","torch.nn.init.xavier_normal_(linear1.weight)\n","torch.nn.init.xavier_normal_(linear2.weight)\n","torch.nn.init.xavier_normal_(linear3.weight)"],"execution_count":64,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Parameter containing:\n","tensor([[-0.2723, -0.0207,  0.0131, -0.2700,  0.1591,  0.2095, -0.1182, -0.3909,\n","          0.4209, -0.0402,  0.0710,  0.1209, -0.1029,  0.1243, -0.0068, -0.1031,\n","          0.2344, -0.2598,  0.0619, -0.0808,  0.1800, -0.2318, -0.2718,  0.1982,\n","          0.1126, -0.0627, -0.0394, -0.0411,  0.1863, -0.2098,  0.0725, -0.0123,\n","          0.2420, -0.0203, -0.0418, -0.2908,  0.0031, -0.1304, -0.2299, -0.1004,\n","          0.3722,  0.0628,  0.0465, -0.0081, -0.2733, -0.1159, -0.0794, -0.2125,\n","          0.0480,  0.1574,  0.1579, -0.2631,  0.1838,  0.1213,  0.1451,  0.1352,\n","          0.2324,  0.3274,  0.1829, -0.4013, -0.0708,  0.1426,  0.1421,  0.2216],\n","        [ 0.1054,  0.0352,  0.1676, -0.1365,  0.0751,  0.0424, -0.0628, -0.0410,\n","          0.0203, -0.2058,  0.0948, -0.0335, -0.1215,  0.0518,  0.0076,  0.0361,\n","         -0.1226,  0.0128, -0.0294, -0.0846, -0.1073, -0.0512,  0.0585, -0.1594,\n","          0.0975,  0.1896,  0.2652,  0.0575, -0.2805,  0.1870, -0.0047,  0.0103,\n","         -0.1037, -0.0389, -0.0751, -0.2771,  0.1568,  0.1901,  0.3310,  0.3886,\n","         -0.2582, -0.0367,  0.1487,  0.1231, -0.1637,  0.0834, -0.3083,  0.1311,\n","         -0.0316,  0.2175, -0.2789, -0.0175,  0.0280,  0.0399, -0.0346,  0.0276,\n","         -0.0107, -0.0822, -0.1576, -0.0606,  0.1902,  0.2197,  0.0525, -0.2503],\n","        [-0.1236,  0.0705, -0.1997, -0.0471,  0.1066, -0.2767, -0.1293,  0.0727,\n","         -0.0432, -0.1112, -0.2160,  0.0453,  0.2688, -0.1824,  0.0417,  0.0096,\n","          0.0688, -0.0461, -0.1256, -0.0699,  0.0728, -0.1841,  0.0755, -0.0315,\n","         -0.1070,  0.0625, -0.0080,  0.2513,  0.1596, -0.1638,  0.1293,  0.4152,\n","         -0.0314,  0.3575, -0.2551, -0.1567, -0.0729,  0.3760, -0.1358,  0.0653,\n","         -0.2428, -0.0446, -0.0120, -0.0720, -0.2814, -0.1899,  0.0103, -0.0482,\n","          0.1921,  0.2111, -0.1628,  0.2645, -0.0257, -0.0239, -0.3266,  0.0785,\n","          0.1123,  0.1349, -0.2059,  0.0549, -0.2725, -0.1540,  0.1399,  0.0160],\n","        [ 0.2080, -0.0181, -0.0359, -0.0929,  0.2955, -0.2504,  0.0682, -0.1698,\n","          0.3099,  0.2270, -0.0996, -0.0889,  0.0464,  0.2131, -0.0625,  0.0933,\n","         -0.1788, -0.0043, -0.0095,  0.1786, -0.2312,  0.1070, -0.1596, -0.1197,\n","         -0.1725,  0.3567,  0.2334, -0.0270,  0.0091,  0.0591, -0.1803,  0.3520,\n","          0.2775,  0.0377, -0.0177, -0.0452, -0.0821,  0.1071,  0.1039,  0.1217,\n","         -0.2792,  0.1832,  0.1035, -0.0393,  0.2820, -0.1931,  0.1395,  0.2293,\n","         -0.1047,  0.0876,  0.0023,  0.0491, -0.0299, -0.1105,  0.3754, -0.1425,\n","         -0.0351, -0.1473,  0.2052, -0.1477, -0.2954,  0.0564,  0.0247, -0.0623]],\n","       requires_grad=True)"]},"metadata":{"tags":[]},"execution_count":64}]},{"cell_type":"code","metadata":{"id":"ADoo1K5BBU4l","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593270286945,"user_tz":-540,"elapsed":429,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["model = torch.nn.Sequential(linear1,relu,\n","                            linear2,relu,\n","#                            linear4,relu,\n","                            linear3).to(device)"],"execution_count":65,"outputs":[]},{"cell_type":"code","metadata":{"id":"BOnhTWQ6BU2n","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593270287995,"user_tz":-540,"elapsed":517,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["# 손실함수와 최적화 함수\n","loss = torch.nn.CrossEntropyLoss().to(device) # softmax 내부적으로 계산\n","optimizer = torch.optim.Adam(model.parameters(), lr=learning_rate) "],"execution_count":66,"outputs":[]},{"cell_type":"code","metadata":{"id":"O-sGvgBuVXjH","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1593270289494,"user_tz":-540,"elapsed":1392,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"89583d91-c2f1-4e5d-8399-93c784b1f1e2"},"source":["\n","total_batch = len(data_loader)\n","for epoch in range(training_epochs):\n","    avg_cost = 0\n","\n","    for X, Y in data_loader:\n","\n","        # one-hot encoding되어 있지 않음\n","        Y = Y.to(device)\n","        #%debug\n","\n","        # 그래디언트 초기화\n","        optimizer.zero_grad()\n","        # Forward 계산\n","        hypothesis = model(X)\n","        # Error 계산\n","        cost = loss(hypothesis, Y)\n","        # Backparopagation\n","        cost.backward()\n","        # 가중치 갱신\n","        optimizer.step()\n","\n","        # 평균 Error 계산\n","        avg_cost += cost / total_batch\n","\n","    print('Epoch:', '%04d' % (epoch + 1), 'cost =', '{:.9f}'.format(avg_cost))\n","\n","print('Learning finished')"],"execution_count":67,"outputs":[{"output_type":"stream","text":["Epoch: 0001 cost = 1.242425680\n","Epoch: 0002 cost = 1.150925994\n","Epoch: 0003 cost = 1.132062674\n","Epoch: 0004 cost = 1.108963370\n","Epoch: 0005 cost = 1.078997493\n","Epoch: 0006 cost = 1.070561528\n","Epoch: 0007 cost = 1.066791654\n","Epoch: 0008 cost = 1.053804040\n","Epoch: 0009 cost = 1.050695658\n","Epoch: 0010 cost = 1.044863582\n","Epoch: 0011 cost = 1.038827419\n","Epoch: 0012 cost = 1.022998571\n","Epoch: 0013 cost = 1.018191338\n","Epoch: 0014 cost = 1.012660861\n","Epoch: 0015 cost = 1.005830169\n","Epoch: 0016 cost = 0.991112590\n","Epoch: 0017 cost = 0.986770570\n","Epoch: 0018 cost = 0.991444349\n","Epoch: 0019 cost = 0.990441561\n","Epoch: 0020 cost = 0.995719969\n","Epoch: 0021 cost = 0.987770259\n","Epoch: 0022 cost = 0.978452027\n","Epoch: 0023 cost = 0.963559806\n","Epoch: 0024 cost = 0.965455770\n","Epoch: 0025 cost = 0.952112377\n","Epoch: 0026 cost = 0.964472115\n","Epoch: 0027 cost = 0.954400778\n","Epoch: 0028 cost = 0.952269435\n","Epoch: 0029 cost = 0.960536838\n","Epoch: 0030 cost = 0.958413005\n","Epoch: 0031 cost = 0.925790131\n","Epoch: 0032 cost = 0.928769886\n","Epoch: 0033 cost = 0.931480408\n","Epoch: 0034 cost = 0.914637923\n","Epoch: 0035 cost = 0.925459266\n","Epoch: 0036 cost = 0.926976204\n","Epoch: 0037 cost = 0.904751122\n","Epoch: 0038 cost = 0.917249560\n","Epoch: 0039 cost = 0.905353665\n","Epoch: 0040 cost = 0.902809083\n","Epoch: 0041 cost = 0.888652205\n","Epoch: 0042 cost = 0.899578571\n","Epoch: 0043 cost = 0.909867465\n","Epoch: 0044 cost = 0.894323766\n","Epoch: 0045 cost = 0.875920713\n","Epoch: 0046 cost = 0.885865808\n","Epoch: 0047 cost = 0.889426529\n","Epoch: 0048 cost = 0.881852150\n","Epoch: 0049 cost = 0.865317106\n","Epoch: 0050 cost = 0.864510655\n","Epoch: 0051 cost = 0.869004488\n","Epoch: 0052 cost = 0.864939988\n","Epoch: 0053 cost = 0.863157153\n","Epoch: 0054 cost = 0.867784321\n","Epoch: 0055 cost = 0.861049235\n","Learning finished\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"iUmBg7jBvkLY","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":948},"executionInfo":{"status":"ok","timestamp":1593270291148,"user_tz":-540,"elapsed":519,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"ffab1147-7c9f-4dbe-9abe-2b0469888a90"},"source":["test=pd.read_csv('test.csv')\n","tmp=test['Date'].str.slice(5,7)\n","\n","test['Date']=tmp\n","test"],"execution_count":68,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Temperature</th>\n","      <th>Weather</th>\n","      <th>Winter break</th>\n","      <th>Festival</th>\n","      <th>Holiday</th>\n","      <th>Weekend</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>02</td>\n","      <td>13</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>02</td>\n","      <td>12</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>02</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>02</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>02</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>02</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>02</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>02</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>02</td>\n","      <td>12</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>02</td>\n","      <td>11</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>02</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>02</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>02</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>02</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>02</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>02</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>02</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>02</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>02</td>\n","      <td>13</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>02</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>02</td>\n","      <td>13</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>02</td>\n","      <td>13</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>02</td>\n","      <td>12</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>02</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>02</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>02</td>\n","      <td>15</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>02</td>\n","      <td>14</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>02</td>\n","      <td>15</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>02</td>\n","      <td>13</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Date  Temperature  Weather  Winter break  Festival  Holiday  Weekend\n","0    02           13        0             1         0        0        1\n","1    02           12        1             1         0        0        1\n","2    02            9        0             1         0        0        0\n","3    02            7        0             1         0        0        0\n","4    02            5        0             1         0        0        0\n","5    02            6        0             1         0        0        0\n","6    02            6        0             1         0        0        0\n","7    02            7        1             1         0        0        1\n","8    02           12        3             0         0        0        1\n","9    02           11        1             0         0        0        0\n","10   02           10        0             0         0        0        0\n","11   02            7        0             0         0        0        0\n","12   02            7        0             0         0        0        0\n","13   02            7        0             0         0        0        0\n","14   02            7        0             0         0        0        1\n","15   02            9        0             0         0        0        1\n","16   02            8        0             0         0        1        0\n","17   02            9        1             0         0        0        0\n","18   02           13        0             0         0        0        0\n","19   02            9        0             0         0        0        0\n","20   02           13        1             0         0        0        0\n","21   02           13        2             0         0        0        1\n","22   02           12        1             0         0        0        1\n","23   02            9        0             0         0        0        0\n","24   02           11        0             0         0        0        0\n","25   02           15        0             0         0        0        0\n","26   02           14        0             0         0        0        0\n","27   02           15        0             0         0        0        0\n","28   02           13        1             0         0        0        1"]},"metadata":{"tags":[]},"execution_count":68}]},{"cell_type":"code","metadata":{"id":"lhWmR5d5v7DV","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593270292268,"user_tz":-540,"elapsed":440,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["test = test.astype('float32')"],"execution_count":69,"outputs":[]},{"cell_type":"code","metadata":{"id":"5vvQVAF4BeZ7","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":53},"executionInfo":{"status":"ok","timestamp":1593270293455,"user_tz":-540,"elapsed":700,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"249e399c-7f19-4332-aad2-7d0466810b2f"},"source":["with torch.no_grad():\n","  x_test=test.loc[:,:]\n","  x_test=np.array(x_test)\n","  x_test=torch.from_numpy(x_test).float().to(device)\n","\n","  prediction=model(x_test)\n","  prediction = torch.argmax(prediction, 1)\n","\n","prediction"],"execution_count":70,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n","        2, 2, 2, 2, 2])"]},"metadata":{"tags":[]},"execution_count":70}]},{"cell_type":"code","metadata":{"id":"u2Y5SgCf8ZRe","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":53},"executionInfo":{"status":"ok","timestamp":1593270294523,"user_tz":-540,"elapsed":526,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"b57c0abf-2a75-4aff-8387-6a804f172ea3"},"source":["prediction=prediction+1\n","prediction"],"execution_count":71,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n","        3, 3, 3, 3, 3])"]},"metadata":{"tags":[]},"execution_count":71}]},{"cell_type":"code","metadata":{"id":"qbuShPbf6ZTi","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":208},"executionInfo":{"status":"error","timestamp":1593270295519,"user_tz":-540,"elapsed":450,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"c2874f78-e2ba-403d-e521-3e0581d8fcc9"},"source":["correct_prediction = prediction.float() == prediction1\n","accuracy = correct_prediction.sum().item() / len(prediction1)\n","accuracy"],"execution_count":72,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-72-35282aa07147>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mcorrect_prediction\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mprediction\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfloat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mprediction1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0maccuracy\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcorrect_prediction\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitem\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m/\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mprediction1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0maccuracy\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'prediction1' is not defined"]}]},{"cell_type":"code","metadata":{"id":"QEuctUgD6oJj","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":208},"executionInfo":{"status":"error","timestamp":1593270227410,"user_tz":-540,"elapsed":756,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"1d469154-7234-498c-e2ab-f173e184d68f"},"source":["correct_prediction = prediction.float() == prediction2\n","accuracy = correct_prediction.sum().item() / len(prediction2)\n","accuracy"],"execution_count":49,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-49-11e6f381a9ad>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mcorrect_prediction\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mprediction\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfloat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mprediction2\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0maccuracy\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcorrect_prediction\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitem\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m/\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mprediction2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0maccuracy\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'prediction2' is not defined"]}]},{"cell_type":"code","metadata":{"id":"O7QpuSS03724","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593270228782,"user_tz":-540,"elapsed":913,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["#prediction1=prediction\n","#prediction1 #0.44827 3layer 55"],"execution_count":50,"outputs":[]},{"cell_type":"code","metadata":{"id":"NUYeIt1g51oJ","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593270229042,"user_tz":-540,"elapsed":457,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["#prediction2=prediction\n","#prediction2 #0.34482"],"execution_count":51,"outputs":[]},{"cell_type":"code","metadata":{"id":"08-DC298EZiw","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593270229576,"user_tz":-540,"elapsed":455,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["# prediction = prediction.cpu().numpy().reshape(-1,1)"],"execution_count":52,"outputs":[]},{"cell_type":"code","metadata":{"id":"cwRRVe2O7ECl","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593270230706,"user_tz":-540,"elapsed":686,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["submit = pd.read_csv('submission_sample.csv')\n","#submit"],"execution_count":53,"outputs":[]},{"cell_type":"code","metadata":{"id":"7GZ68XxywkOd","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":127},"executionInfo":{"status":"ok","timestamp":1593270230973,"user_tz":-540,"elapsed":369,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"6e9b4877-499c-4e56-9675-7c82decedf23"},"source":["for i in range(len(prediction)):\n","    submit['Crowd level'][i] = prediction[i].item()\n","submit['Crowd level']=submit['Crowd level'].astype(\"int\")"],"execution_count":54,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"Z8WAn65jwwCU","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593270231628,"user_tz":-540,"elapsed":544,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["#submit"],"execution_count":55,"outputs":[]},{"cell_type":"code","metadata":{"id":"ToWeKltiwyYP","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593270232458,"user_tz":-540,"elapsed":500,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["submit.to_csv(\"submission.csv\",index=False,header=True)"],"execution_count":56,"outputs":[]},{"cell_type":"code","metadata":{"id":"NWGFdgAHw5d7","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":53},"executionInfo":{"status":"ok","timestamp":1593270262870,"user_tz":-540,"elapsed":2968,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"ec628960-55e5-4ba5-fad4-45d8763b4e70"},"source":["!kaggle competitions submit -c disneyland-crowd-levels -f submission.csv -m \"3layer 128->64 \""],"execution_count":57,"outputs":[{"output_type":"stream","text":["100% 394/394 [00:00<00:00, 2.08kB/s]\n","Successfully submitted to Disneyland Crowd Levels"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"kQPRKO8r7EAB","colab_type":"code","colab":{}},"source":["id=np.array([i for i in range(62)]).reshape(-1,1)\n","prediction=prediction.reshape(-1,1)\n","\n","result=np.hstack([id, prediction])\n","df=pd.DataFrame(result, columns=['Date','Label'])\n","df.to_csv('baseline.csv', index=False, header=True)\n","\n","result"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"r-uBTW2uKqBX","colab_type":"text"},"source":["### layer수를 변경해보기\n","\n","#### 2) 5layer\n","- Xavier Init\n","- Adam \n","- 학습 파라미터 동일.\n","- hidden layer의 노드개수 256\n","\n","-> accuracy: 0.5\n","- 오히려 감소했다."]},{"cell_type":"markdown","metadata":{"id":"XYme_p9iZjX_","colab_type":"text"},"source":["3) 5layer dropout\n","\n","->  0.4516128897666931\n","- 더 감소..\n","\n"]},{"cell_type":"markdown","metadata":{"id":"UowXz2IK6i9-","colab_type":"text"},"source":["3)번 수정하면서 변화 확인하기\n","-  hidden layer의 노드수를 256 -> 512 변경\n","- epoch 변경\n","- 4layer로 수정 \n","-> 모두 accuracy 차이 x"]},{"cell_type":"code","metadata":{"id":"pRYTRdfI0vtw","colab_type":"code","colab":{}},"source":["device = 'cuda' if torch.cuda.is_available() else 'cpu'\n","\n","random.seed(777)\n","torch.manual_seed(777)\n","if device == 'cuda':\n","  torch.cuda.manual_seed_all(777)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"2GxR6EgmZJEJ","colab_type":"code","colab":{}},"source":["# 학습 파라미터 설정\n","learning_rate = 0.01\n","training_epochs = 50\n","batch_size = 100\n","drop_prob = 0.3"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"cvCKQOytIjbw","colab_type":"code","colab":{}},"source":["data_loader = torch.utils.data.DataLoader(dataset=train,\n","                                          batch_size=batch_size,\n","                                          shuffle=True,\n","                                          drop_last=True)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"3CmGmttVKp2w","colab_type":"code","colab":{}},"source":["# 5-layer, node 512개\n","\n","linear1 = torch.nn.Linear(7,256,bias=True)\n","linear2 = torch.nn.Linear(256,256,bias=True)\n","linear3 = torch.nn.Linear(256,256,bias=True)\n","linear4 = torch.nn.Linear(256,256,bias=True)\n","linear5 = torch.nn.Linear(256,4,bias=True)\n","relu = torch.nn.ReLU()\n","dropout = torch.nn.Dropout(p=drop_prob)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qnTO67ksGWbc","colab_type":"code","colab":{}},"source":["# Random Init => Xavier Init\n","torch.nn.init.xavier_normal_(linear1.weight)\n","torch.nn.init.xavier_normal_(linear2.weight)\n","torch.nn.init.xavier_normal_(linear3.weight)\n","torch.nn.init.xavier_normal_(linear4.weight)\n","torch.nn.init.xavier_normal_(linear5.weight)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"pVMOqF8jK_M3","colab_type":"code","colab":{}},"source":["model = torch.nn.Sequential(linear1,relu,\n","                            linear2,relu,\n","                       linear3,relu,\n","                          linear4,relu,\n","                            linear5).to(device)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"6Aj27lxILI9q","colab_type":"code","colab":{}},"source":["# 손실함수와 최적화 함수\n","loss = torch.nn.CrossEntropyLoss().to(device) # softmax 내부적으로 계산\n","optimizer = torch.optim.Adam(model.parameters(), lr=learning_rate) "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Hb4hT37sLLep","colab_type":"code","colab":{}},"source":["\n","total_batch = len(data_loader)\n","model.train()                   #\n","\n","for epoch in range(training_epochs):\n","    avg_cost = 0\n","\n","    for X, Y in data_loader:\n","\n","        # one-hot encoding되어 있지 않음\n","        Y = Y.to(device)\n","        #%debug\n","\n","        # 그래디언트 초기화\n","        optimizer.zero_grad()\n","        # Forward 계산\n","        hypothesis = model(X)\n","        # Error 계산\n","        cost = loss(hypothesis, Y)\n","        # Backparopagation\n","        cost.backward()\n","        # 가중치 갱신\n","        optimizer.step()\n","\n","        # 평균 Error 계산\n","        avg_cost += cost / total_batch\n","\n","    print('Epoch:', '%04d' % (epoch + 1), 'cost =', '{:.9f}'.format(avg_cost))\n","\n","print('Learning finished')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"WOG7nSIWLOxK","colab_type":"code","colab":{}},"source":["with torch.no_grad():\n","  model.eval() \n","  x_test=test.loc[:,:]\n","  x_test=np.array(x_test)\n","  x_test=torch.from_numpy(x_test).float().to(device)\n","\n","  prediction=model(x_test)\n","  prediction = torch.argmax(prediction, 1)\n","  \n","  print(prediction)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"5oN0HE0jLYuf","colab_type":"code","colab":{}},"source":["correct = prediction == y_test\n","accuracy=correct.float().mean()\n","\n","print('Accuracy:', accuracy.item())"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"5MYS2wtGMyEj","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]}]}