{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"캐글 5) 5Layer_mnist_dnn_xavier.ipynb의 사본","provenance":[{"file_id":"1BW1lU-DAAedbG_xn9tv3uxdtm0DFpE4b","timestamp":1591789190268},{"file_id":"1y9qF3D4vbQVhX_dZCgplRuw_EcgW8Sg2","timestamp":1591775972380},{"file_id":"1CI11CA5otqB7-RsQLKak3LJW3xeCUr9q","timestamp":1590895708437},{"file_id":"1jsP6IkoSZW5roMip53QSPJjiVP6Ej3Zk","timestamp":1590895018573},{"file_id":"1bimNZtout48XzSy7VoWbmdpOHQ-SAkHX","timestamp":1590864591861}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"S2e7WHWyC4Wt","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":570},"outputId":"31cec8e7-80bf-4028-d9bf-9bca5c7ef1e6","executionInfo":{"status":"ok","timestamp":1591789604624,"user_tz":-540,"elapsed":15692,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["!pip uninstall -y kaggle\n","!pip install --upgrade pip\n","!pip install kaggle==1.5.6"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Uninstalling kaggle-1.5.6:\n","  Successfully uninstalled kaggle-1.5.6\n","Collecting pip\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/43/84/23ed6a1796480a6f1a2d38f2802901d078266bda38388954d01d3f2e821d/pip-20.1.1-py2.py3-none-any.whl (1.5MB)\n","\u001b[K     |████████████████████████████████| 1.5MB 43.6MB/s \n","\u001b[?25hInstalling collected packages: pip\n","  Found existing installation: pip 19.3.1\n","    Uninstalling pip-19.3.1:\n","      Successfully uninstalled pip-19.3.1\n","Successfully installed pip-20.1.1\n","Collecting kaggle==1.5.6\n","  Downloading kaggle-1.5.6.tar.gz (58 kB)\n","\u001b[K     |████████████████████████████████| 58 kB 4.8 MB/s \n","\u001b[?25hRequirement already satisfied: urllib3<1.25,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from kaggle==1.5.6) (1.24.3)\n","Requirement already satisfied: six>=1.10 in /usr/local/lib/python3.6/dist-packages (from kaggle==1.5.6) (1.12.0)\n","Requirement already satisfied: certifi in /usr/local/lib/python3.6/dist-packages (from kaggle==1.5.6) (2020.4.5.1)\n","Requirement already satisfied: python-dateutil in /usr/local/lib/python3.6/dist-packages (from kaggle==1.5.6) (2.8.1)\n","Requirement already satisfied: requests in /usr/local/lib/python3.6/dist-packages (from kaggle==1.5.6) (2.23.0)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.6/dist-packages (from kaggle==1.5.6) (4.41.1)\n","Requirement already satisfied: python-slugify in /usr/local/lib/python3.6/dist-packages (from kaggle==1.5.6) (4.0.0)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests->kaggle==1.5.6) (2.9)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests->kaggle==1.5.6) (3.0.4)\n","Requirement already satisfied: text-unidecode>=1.3 in /usr/local/lib/python3.6/dist-packages (from python-slugify->kaggle==1.5.6) (1.3)\n","Building wheels for collected packages: kaggle\n","  Building wheel for kaggle (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for kaggle: filename=kaggle-1.5.6-py3-none-any.whl size=72859 sha256=0a816a77cacb4e5547dac37d6479174495134cb47930503cca716afc49ab477f\n","  Stored in directory: /root/.cache/pip/wheels/01/3e/ff/77407ebac3ef71a79b9166a8382aecf88415a0bcbe3c095a01\n","Successfully built kaggle\n","Installing collected packages: kaggle\n","Successfully installed kaggle-1.5.6\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"VzOdV07TDLIp","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"outputId":"d8d837ed-f88f-4301-c200-83559b3bc950","executionInfo":{"status":"ok","timestamp":1591791678067,"user_tz":-540,"elapsed":11620,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["!mkdir -p ~/.kaggle\n","!cp kaggle.json ~/.kaggle\n","!ls -lha kaggle.json\n","!chmod 600 ~/.kaggle/kaggle.json"],"execution_count":107,"outputs":[{"output_type":"stream","text":["-rw-r--r-- 1 root root 63 Jun 10 12:21 kaggle.json\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"liROh88LDLDT","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"outputId":"b504f742-1d8c-45d2-e8c9-2c43d64284a6","executionInfo":{"status":"ok","timestamp":1591791702422,"user_tz":-540,"elapsed":4682,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["!kaggle competitions download -c 2020aimnist"],"execution_count":108,"outputs":[{"output_type":"stream","text":["2020aimnist.zip: Skipping, found more recently modified local copy (use --force to force download)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"JRwpIc2EDK9_","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":52},"outputId":"41642632-d3f9-461c-8952-fdea8dfd118a","executionInfo":{"status":"ok","timestamp":1591791731155,"user_tz":-540,"elapsed":33391,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["!unzip 2020aimnist.zip"],"execution_count":109,"outputs":[{"output_type":"stream","text":["Archive:  2020aimnist.zip\n","replace mnist_test.csv? [y]es, [n]o, [A]ll, [N]one, [r]ename: "],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Y3bpvTNIRwWl","colab_type":"code","colab":{}},"source":["import pandas as pd\n","import numpy as np\n","\n","import torch\n","import torchvision.datasets as data\n","import torchvision.transforms as transforms\n","import random"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"YPbnGHWBDi3C","colab_type":"code","colab":{}},"source":["device = 'cuda' if torch.cuda.is_available() else 'cpu'\n","\n","random.seed(777)\n","torch.manual_seed(777)\n","if device == 'cuda':\n","  torch.cuda.manual_seed_all(777)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"gh_Yz21HVs0V","colab_type":"code","colab":{}},"source":["\n","# 학습 파라미터 설정\n","learning_rate = 0.001\n","training_epochs = 30\n","batch_size = 100"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Vp-n_5AU2hyR","colab_type":"text"},"source":["root: 저장경로\n","학습/테스트 데이터 선택: True 학습데이터\n","transform:\n","download: \n"]},{"cell_type":"code","metadata":{"id":"9EVz_27QV_AJ","colab_type":"code","colab":{}},"source":["train_data=pd.read_csv('mnist_train.csv',header=None,skiprows=1, usecols=range(1,786))\n","test_data=pd.read_csv('mnist_test.csv',header=None,skiprows=1, usecols=range(1,785))"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"IHBBCsYFDrJA","colab_type":"code","colab":{}},"source":["x_train_data=train_data.loc[:,0:784]\n","y_train_data=train_data.loc[:,785]\n","\n","x_train_data=np.array(x_train_data)\n","y_train_data=np.array(y_train_data)\n","\n","x_train_data=torch.FloatTensor(x_train_data)\n","y_train_data=torch.LongTensor(y_train_data)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"a5kLiXCQDuO7","colab_type":"code","colab":{}},"source":["train_dataset = torch.utils.data.TensorDataset(x_train_data, y_train_data)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"-Ae1Q7WXWJcc","colab_type":"code","colab":{}},"source":["\n","data_loader = torch.utils.data.DataLoader(dataset=train_dataset,\n","                                          batch_size=batch_size,\n","                                          shuffle=True,\n","                                          drop_last=True)\n"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"R0Tk0BBFzOJq","colab_type":"text"},"source":["![대체 텍스트](https://user-images.githubusercontent.com/11758940/83336289-229ec200-a2ed-11ea-9fb8-88a51198e475.png)"]},{"cell_type":"code","metadata":{"id":"ntcrgdljaxST","colab_type":"code","colab":{}},"source":["# 입력값과 출력값을 고정해둔 상태에서 가운데 값을 결정하는 것은 사용자의 몫\n","# 보통 2의 배수를 넣는 것이 좋음\n","\n","linear1 = torch.nn.Linear(784,512,bias=True)\n","linear2 = torch.nn.Linear(512,512,bias=True)\n","linear3 = torch.nn.Linear(512,512,bias=True)\n","linear4 = torch.nn.Linear(512,512,bias=True)\n","linear5 = torch.nn.Linear(512,10,bias=True)\n","\n","linear6 = torch.nn.Linear(512,512,bias=True)\n","linear7 = torch.nn.Linear(512,512,bias=True)\n","linear8 = torch.nn.Linear(512,512,bias=True)\n","relu = torch.nn.ReLU()"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"OUqE8Uibc4xH","colab_type":"text"},"source":["[메뉴얼] https://pytorch.org/docs/stable/nn.init.html#torch.nn.init.xavier_uniform_"]},{"cell_type":"code","metadata":{"id":"MrpNg6XycEWE","colab_type":"code","outputId":"a21c3b61-d2da-461b-fe46-13a4f7408a6e","executionInfo":{"status":"ok","timestamp":1591792088083,"user_tz":-540,"elapsed":1082,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"colab":{"base_uri":"https://localhost:8080/","height":177}},"source":["# Random Init => Xavier Init\n","torch.nn.init.xavier_uniform_(linear1.weight)\n","torch.nn.init.xavier_uniform_(linear2.weight)\n","torch.nn.init.xavier_uniform_(linear3.weight)\n","torch.nn.init.xavier_uniform_(linear4.weight)\n","torch.nn.init.xavier_uniform_(linear5.weight)\n","\n","torch.nn.init.xavier_uniform_(linear6.weight)\n","torch.nn.init.xavier_uniform_(linear7.weight)\n","torch.nn.init.xavier_uniform_(linear8.weight)"],"execution_count":147,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Parameter containing:\n","tensor([[-0.0316,  0.0334,  0.0429,  ...,  0.0657, -0.0384, -0.0153],\n","        [ 0.0099, -0.0637, -0.0271,  ..., -0.0177, -0.0268,  0.0370],\n","        [ 0.0150, -0.0099, -0.0625,  ...,  0.0255, -0.0445,  0.0444],\n","        ...,\n","        [-0.0333, -0.0024, -0.0072,  ..., -0.0459, -0.0234, -0.0673],\n","        [-0.0136,  0.0702,  0.0502,  ...,  0.0172,  0.0040,  0.0695],\n","        [ 0.0614, -0.0581, -0.0639,  ...,  0.0620, -0.0177,  0.0373]],\n","       requires_grad=True)"]},"metadata":{"tags":[]},"execution_count":147}]},{"cell_type":"code","metadata":{"id":"9k08MAGZ326V","colab_type":"code","colab":{}},"source":["# ======================================\n","# relu는 맨 마지막 레이어에서 빼는 것이 좋다.\n","# ======================================\n","model = torch.nn.Sequential(linear1,relu,\n","                            linear2,relu,\n","                            linear3,relu,\n","                            linear4,relu,\n","                            linear6,relu,\n","                            linear5).to(device)"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"fQxCfqMSces5","colab_type":"text"},"source":["[메뉴얼] https://pytorch.org/docs/stable/nn.html#crossentropyloss"]},{"cell_type":"code","metadata":{"id":"o9WQWlFdcKaH","colab_type":"code","colab":{}},"source":["# 손실함수와 최적화 함수\n","loss = torch.nn.CrossEntropyLoss().to(device) # softmax 내부적으로 계산\n","optimizer = torch.optim.Adam(model.parameters(), lr=learning_rate) "],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"yQu5p_pTcRFI","colab_type":"code","outputId":"1940259c-09f8-4865-eafb-258a4fddce98","executionInfo":{"status":"ok","timestamp":1591792176850,"user_tz":-540,"elapsed":89733,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"colab":{"base_uri":"https://localhost:8080/","height":568}},"source":["total_batch = len(data_loader)\n","for epoch in range(training_epochs):\n","    avg_cost = 0\n","\n","    for X, Y in data_loader:\n","\n","        # (1000, 1, 28, 28) 크기의 텐서를 (1000, 784) 크기의 텐서로 변형\n","        X = X.view(-1, 28 * 28).to(device)\n","        # one-hot encoding되어 있지 않음\n","        Y = Y.to(device)\n","        #%debug\n","\n","        # 그래디언트 초기화\n","        optimizer.zero_grad()\n","        # Forward 계산\n","        hypothesis = model(X)\n","        # Error 계산\n","        cost = loss(hypothesis, Y)\n","        # Backparopagation\n","        cost.backward()\n","        # 가중치 갱신\n","        optimizer.step()\n","\n","        # 평균 Error 계산\n","        avg_cost += cost / total_batch\n","\n","    print('Epoch:', '%04d' % (epoch + 1), 'cost =', '{:.9f}'.format(avg_cost))\n","\n","print('Learning finished')"],"execution_count":150,"outputs":[{"output_type":"stream","text":["Epoch: 0001 cost = 0.921173990\n","Epoch: 0002 cost = 0.128328636\n","Epoch: 0003 cost = 0.101022899\n","Epoch: 0004 cost = 0.090200871\n","Epoch: 0005 cost = 0.076637916\n","Epoch: 0006 cost = 0.074146055\n","Epoch: 0007 cost = 0.065864667\n","Epoch: 0008 cost = 0.059631880\n","Epoch: 0009 cost = 0.061555944\n","Epoch: 0010 cost = 0.053373221\n","Epoch: 0011 cost = 0.055044625\n","Epoch: 0012 cost = 0.044983536\n","Epoch: 0013 cost = 0.050971158\n","Epoch: 0014 cost = 0.047688466\n","Epoch: 0015 cost = 0.044286985\n","Epoch: 0016 cost = 0.040510543\n","Epoch: 0017 cost = 0.041938208\n","Epoch: 0018 cost = 0.032613412\n","Epoch: 0019 cost = 0.034451332\n","Epoch: 0020 cost = 0.026523683\n","Epoch: 0021 cost = 0.041155923\n","Epoch: 0022 cost = 0.030385721\n","Epoch: 0023 cost = 0.025544012\n","Epoch: 0024 cost = 0.039368145\n","Epoch: 0025 cost = 0.026412508\n","Epoch: 0026 cost = 0.031964712\n","Epoch: 0027 cost = 0.026987595\n","Epoch: 0028 cost = 0.030856187\n","Epoch: 0029 cost = 0.013689330\n","Epoch: 0030 cost = 0.025648285\n","Learning finished\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"z_SQp0GxdJfc","colab_type":"code","colab":{}},"source":["# Test the model using test sets\n","with torch.no_grad():\n","\n","  x_test_data=test_data.loc[:,:]\n","  x_test_data=np.array(x_test_data)\n","  x_test_data=torch.from_numpy(x_test_data).float().to(device)\n","\n","  prediction = model(x_test_data)\n","  correct_prediction = torch.argmax(prediction, 1)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"i425y53v4tvo","colab_type":"code","colab":{}},"source":["correct_prediction = correct_prediction.cpu().numpy().reshape(-1,1)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"D_Ycy_Fv5wIP","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":399},"outputId":"ba9c9196-98cf-4846-c6d2-768383a42d08","executionInfo":{"status":"ok","timestamp":1591792176855,"user_tz":-540,"elapsed":89609,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["submit=pd.read_csv('submission.csv')\n","submit"],"execution_count":153,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>Label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>9995</th>\n","      <td>9995</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9996</th>\n","      <td>9996</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9997</th>\n","      <td>9997</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9998</th>\n","      <td>9998</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9999</th>\n","      <td>9999</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10000 rows × 2 columns</p>\n","</div>"],"text/plain":["        id  Label\n","0        0      1\n","1        1      1\n","2        2      1\n","3        3      1\n","4        4      1\n","...    ...    ...\n","9995  9995      1\n","9996  9996      1\n","9997  9997      1\n","9998  9998      1\n","9999  9999      1\n","\n","[10000 rows x 2 columns]"]},"metadata":{"tags":[]},"execution_count":153}]},{"cell_type":"code","metadata":{"id":"F8anwokAEHvI","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":399},"outputId":"c6799a79-8bde-412b-9b6a-e213f5ab8571","executionInfo":{"status":"ok","timestamp":1591792177289,"user_tz":-540,"elapsed":90018,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["for i in range(len(correct_prediction)):\n","  submit['Label'][i]=correct_prediction[i].item()\n","\n","submit"],"execution_count":154,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>Label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>9995</th>\n","      <td>9995</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>9996</th>\n","      <td>9996</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>9997</th>\n","      <td>9997</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>9998</th>\n","      <td>9998</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>9999</th>\n","      <td>9999</td>\n","      <td>6</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10000 rows × 2 columns</p>\n","</div>"],"text/plain":["        id  Label\n","0        0      7\n","1        1      2\n","2        2      1\n","3        3      0\n","4        4      4\n","...    ...    ...\n","9995  9995      2\n","9996  9996      3\n","9997  9997      4\n","9998  9998      5\n","9999  9999      6\n","\n","[10000 rows x 2 columns]"]},"metadata":{"tags":[]},"execution_count":154}]},{"cell_type":"code","metadata":{"id":"OsvdQiNsEIqQ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":52},"outputId":"3573435a-7590-452a-e276-fd0c7349a412","executionInfo":{"status":"ok","timestamp":1591792186436,"user_tz":-540,"elapsed":99135,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["submit.to_csv('baseline.csv',index=False,header=True)\n","\n","!kaggle competitions submit -c 2020aimnist -f baseline.csv -m \"layer5, 55\""],"execution_count":155,"outputs":[{"output_type":"stream","text":["100% 67.3k/67.3k [00:05<00:00, 12.4kB/s]\n","Successfully submitted to 2020.AI.MNIST"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"u8mEojf0ELMC","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}