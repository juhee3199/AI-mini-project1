{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"mnist_CNN","provenance":[{"file_id":"13rNXo-OqmIl95tl2Iec76SgWahfy3jZ9","timestamp":1593236250610}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"NQYzZ3NrBxMn","colab_type":"text"},"source":["### GPU 사용을 위한 환경 세팅\n","- 런타임 => 런타임유형변경 => 하드웨어가속기 => GPU로 설정\n","\n","학습속도를 빠르게 할 수 있다.\n","\n","반드시 GPU로 변경하고 시험봐야한다!!!\n","\n","\n","### GUI 확인\n","![GUI](https://user-images.githubusercontent.com/11758940/84726212-581efd00-afc7-11ea-8166-dd4dda7b8e28.png)"]},{"cell_type":"code","metadata":{"id":"ESXtr3cKA8EA","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593390640879,"user_tz":-540,"elapsed":814,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["# 현재 나에게 할당된 GPU 확인하기\n","#! nvidia-smi"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"id":"hZqtN_FBxeo8","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593390735302,"user_tz":-540,"elapsed":878,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["import torch\n","import torchvision.datasets as dsets\n","import torchvision.transforms as transforms\n","import torch.nn.init"],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"id":"91zmIrLzxwIv","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593390735304,"user_tz":-540,"elapsed":837,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["device = 'cuda' if torch.cuda.is_available() else 'cpu'\n","\n","# for reproducibility\n","torch.manual_seed(777)\n","if device == 'cuda':\n","    torch.cuda.manual_seed_all(777)"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"id":"56wj7BMUx0UR","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593390735306,"user_tz":-540,"elapsed":798,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["# parameters\n","learning_rate = 0.001\n","training_epochs = 15\n","batch_size = 100"],"execution_count":13,"outputs":[]},{"cell_type":"code","metadata":{"id":"rGyVS6rtx1zA","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593390735309,"user_tz":-540,"elapsed":759,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["# MNIST dataset\n","mnist_train = dsets.MNIST(root='MNIST_data/',\n","                          train=True,\n","                          transform=transforms.ToTensor(),\n","                          download=True)\n","\n","mnist_test = dsets.MNIST(root='MNIST_data/',\n","                         train=False,\n","                         transform=transforms.ToTensor(),\n","                         download=True)"],"execution_count":14,"outputs":[]},{"cell_type":"code","metadata":{"id":"0JUl2jMex50I","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593390735311,"user_tz":-540,"elapsed":741,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["# dataset loader\n","data_loader = torch.utils.data.DataLoader(dataset=mnist_train,\n","                                          batch_size=batch_size,\n","                                          shuffle=True,\n","                                          drop_last=True)"],"execution_count":15,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"5Xr5bwiNGMSZ","colab_type":"text"},"source":["## >> 버전 1.0\n","![대체 텍스트](https://user-images.githubusercontent.com/11758940/84732153-e306f400-afd5-11ea-8524-55e4f13e749b.png)"]},{"cell_type":"markdown","metadata":{"id":"qU2LHMrtJ9FS","colab_type":"text"},"source":["-  1D로 바뀌지 않고 2D 그대로 들어간다. 입력은 1\n","\n","- Conv1= 입력1, 출력32, \n","커널 size=3이지만 padding=1 이기 때문에 28* 28-> 28 * 28 줄어들지 않고 그대로 유지된다.\n","- Maxpoo1= kernel_size=2, stride=2이므로   28* 28 -> 14* 14 로 줄어든다.\n","- Fc= FC layer에 대한 initialize\n"]},{"cell_type":"code","metadata":{"id":"8U86AQqyCbgF","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593390749530,"user_tz":-540,"elapsed":723,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["## 버전 1.0\n","class CNN(torch.nn.Module):\n","  def __init__(self):\n","    super(CNN,self).__init__() # 이부분 빼먹기 쉬운데 조심할 것\n","\n","    self.conv1 = torch.nn.Conv2d(1,32,kernel_size=3,stride=1,padding=1)   #28*28\n","    self.relu1 = torch.nn.ReLU()\n","    self.maxpool1 = torch.nn.MaxPool2d(kernel_size=2,stride=2)            #14*14\n","\n","    self.conv2 = torch.nn.Conv2d(32,64,kernel_size=3,stride=1,padding=1)  #14*14\n","    self.relu2 = torch.nn.ReLU()\n","    self.maxpool2 = torch.nn.MaxPool2d(kernel_size=2,stride=2)            #7*7\n","\n","    # FC layer는 1D데이터를 받아서 1D데이터를 출력한다.\n","    self.fc = torch.nn.Linear(7*7*64,10,bias=True)    # 7*7*64= 3136, output=10\n","    torch.nn.init.kaiming_uniform(self.fc.weight)     # linear의 weight 초기화. xarvier_uniform 등의 초기화 방법 사용가능\n","\n","#IN, OUT 정의\n","  def forward(self,x):  \n","    out = self.conv1(x)\n","    out = self.relu1(out)\n","    out = self.maxpool1(out)\n","    out = self.conv2(out)\n","    out = self.relu2(out)\n","    out = self.maxpool2(out)          \n","    out = out.view(out.size(0),-1)     # out = Batch(0) x 7(1) x 7(2) x 64(3)\n","                                      # View를 통해 2D데이터(MaxPool에서 받은)를 1D로 바꿔준다.\n","    out = self.fc(out)\n","    return out"],"execution_count":16,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"cBWpK0CPaZJL","colab_type":"text"},"source":["## >> 버전 2.0\n","![대체 텍스트](https://user-images.githubusercontent.com/11758940/84732337-63c5f000-afd6-11ea-9e7b-3c4c88785213.png)"]},{"cell_type":"code","metadata":{"id":"aRjjbkxgJSdC","colab_type":"code","colab":{}},"source":["# 버전 2.0: 모듈화\n","\n","class CNN(torch.nn.Module):\n","  def __init__(self):\n","    super(CNN,self).__init__() # 이부분 빼먹기 쉬운데 조심할 것\n","\n","    self.layer1 = torch.nn.Sequential(\n","        torch.nn.Conv2d(1,32,kernel_size=3,stride=1,padding=1),\n","        torch.nn.ReLU(),\n","        torch.nn.MaxPool2d(kernel_size=2,stride=2)\n","    )\n","\n","    self.layer2 = torch.nn.Sequential(\n","        torch.nn.Conv2d(32,64,kernel_size=3,stride=1,padding=1),\n","        torch.nn.ReLU(),\n","        torch.nn.MaxPool2d(kernel_size=2,stride=2)\n","    ) \n","\n","    self.fc = torch.nn.Linear(7*7*64,10,bias=True)\n","    torch.nn.init.kaiming_uniform(self.fc.weight)\n","\n","#모듈별로 묶어서.\n","  def forward(self,x):\n","    out = self.layer1(x)\n","    out = self.layer2(out)\n","    out = out.view(out.size(0),-1)     # out = Batch x 7 x 7 x 64\n","    out = self.fc(out)\n","    return out"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"cEZkMNDgNoV_","colab_type":"text"},"source":["- 모델 학습"]},{"cell_type":"code","metadata":{"id":"S2mpSqfT5b-q","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":72},"executionInfo":{"status":"ok","timestamp":1593390753893,"user_tz":-540,"elapsed":554,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"b53cdeac-82ed-4323-b4db-9f006cf38916"},"source":["model = CNN().to(device)"],"execution_count":17,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:16: UserWarning: nn.init.kaiming_uniform is now deprecated in favor of nn.init.kaiming_uniform_.\n","  app.launch_new_instance()\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"mRoFoX_GL6Kg","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1593390773369,"user_tz":-540,"elapsed":935,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}}},"source":["# mnist_dnn 예제와 동일\n","\n","#criterion=loss\n","criterion = torch.nn.CrossEntropyLoss().to(device)    # Softmax is internally computed.\n","optimizer = torch.optim.Adam(model.parameters(), lr=learning_rate)"],"execution_count":20,"outputs":[]},{"cell_type":"code","metadata":{"id":"VvtX6F8u-USV","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":319},"executionInfo":{"status":"ok","timestamp":1593390847688,"user_tz":-540,"elapsed":67316,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"f29e9535-86a8-4cfc-a595-2243a8b4ae52"},"source":["# DNN 예제과 동일하고, X데이터 View로 변환하지 않는 부분만 다름\n","                # 주의: 2D => 1D로 변경할 필요 없음\n","\n","total_batch = len(data_loader)\n","print('Learning started. It takes sometime.')\n","for epoch in range(training_epochs):\n","    avg_cost = 0\n","\n","    for X, Y in data_loader:\n","        # image is already size of (28x28), no reshape\n","        # label is not one-hot encoded\n","        X = X.to(device)    # 이미 1D데이터 이므로, 2D로 변형할 필요가 없다.\n","        Y = Y.to(device)\n","\n","        optimizer.zero_grad()\n","        hypothesis = model(X)\n","        cost = criterion(hypothesis, Y)\n","        cost.backward()\n","        optimizer.step()\n","\n","        avg_cost += cost / total_batch\n","\n","    print('[Epoch: {:>4}] cost = {:>.9}'.format(epoch + 1, avg_cost))\n","\n","print('Learning Finished!')"],"execution_count":22,"outputs":[{"output_type":"stream","text":["Learning started. It takes sometime.\n","[Epoch:    1] cost = 0.0479645766\n","[Epoch:    2] cost = 0.0360154249\n","[Epoch:    3] cost = 0.0282149632\n","[Epoch:    4] cost = 0.0236400161\n","[Epoch:    5] cost = 0.0191732831\n","[Epoch:    6] cost = 0.016148854\n","[Epoch:    7] cost = 0.0132045215\n","[Epoch:    8] cost = 0.0107234754\n","[Epoch:    9] cost = 0.00904405676\n","[Epoch:   10] cost = 0.0090997247\n","[Epoch:   11] cost = 0.00678381091\n","[Epoch:   12] cost = 0.00623089541\n","[Epoch:   13] cost = 0.00544329453\n","[Epoch:   14] cost = 0.00525554549\n","[Epoch:   15] cost = 0.00554132322\n","Learning Finished!\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"mUfJ-HHc-oUq","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":126},"executionInfo":{"status":"ok","timestamp":1593353195372,"user_tz":-540,"elapsed":616,"user":{"displayName":"Juhee","photoUrl":"","userId":"14369088239483395487"}},"outputId":"9a0aca18-6f48-417e-c2c2-72d263a9f486"},"source":["# # mnist_dnn 예제와 동일: X데이터 View로 변환하지 않는 부분만 다름\n","# 주의: 2D => 1D로 변경할 필요 없음\n","\n","# Test model and check accuracy\n","with torch.no_grad():\n","    X_test = mnist_test.test_data.view(len(mnist_test), 1, 28, 28).float().to(device) # 1D로 변경할 필요가 없다. \n","    Y_test = mnist_test.test_labels.to(device)\n","\n","    prediction = model(X_test)\n","    correct_prediction = torch.argmax(prediction, 1) == Y_test\n","    accuracy = correct_prediction.float().mean()\n","    print('Accuracy:', accuracy.item())"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Accuracy: 0.9853999614715576\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/torchvision/datasets/mnist.py:60: UserWarning: test_data has been renamed data\n","  warnings.warn(\"test_data has been renamed data\")\n","/usr/local/lib/python3.6/dist-packages/torchvision/datasets/mnist.py:50: UserWarning: test_labels has been renamed targets\n","  warnings.warn(\"test_labels has been renamed targets\")\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"q1-Ips3fC7L4","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]}]}